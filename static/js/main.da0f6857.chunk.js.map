{"version":3,"sources":["sounds/siren.mp3","sounds/musica.mp3","imgs/switchUp.png","imgs/switchDown.png","Roleta.js","PainelJogador.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Roleta","count","updateCount","countMax","jogadores","disparaAlarme","corMoldura","roletaDoBem","useState","escolhido","setEscolhido","atual","anterior","length","posterior","useEffect","setTimeout","proximo","renderNext","className","style","borderColor","PainelJogador","jogadorId","onClick","selecionado","App","setCount","setCountMax","selecionados","setSelecionados","alarmeOn","setAlarmeOn","setCorMoldura","setRoletaDoBem","sirene","Audio","siren","audio","musica","load","selecionaJogador","idJogador","includes","filter","v","sort","class","transform","backgroundColor","newCount","j","pause","play","map","randonChoice","randomInt","newCountMax","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.da0f6857.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/siren.589d6e56.mp3\";","module.exports = __webpack_public_path__ + \"static/media/musica.55f2f552.mp3\";","module.exports = __webpack_public_path__ + \"static/media/switchUp.ab9b12f6.png\";","module.exports = __webpack_public_path__ + \"static/media/switchDown.284e0f33.png\";","import React, { useEffect, useState } from 'react';\r\n\r\nimport './Roleta.css';\r\n\r\nconst Roleta = ({count, updateCount, countMax, jogadores, disparaAlarme, corMoldura, roletaDoBem}) => {\r\n    \r\n  const [escolhido, setEscolhido] = useState(0);\r\n    \r\n    \r\n\r\n\r\n\r\n  let atual = jogadores[escolhido] ? escolhido : 0;    \r\n  let anterior = atual === 0 ? jogadores.length - 1 : atual - 1;\r\n  let posterior =  atual === jogadores.length - 1 ? 0 : atual + 1;  \r\n      const renderNext = () => {\r\n        const proximo = atual + 1;\r\n        if(proximo === jogadores.length) {\r\n          setEscolhido(0);\r\n        }\r\n        else {\r\n          setEscolhido(proximo);\r\n        }\r\n        updateCount(count+1);\r\n      }\r\n    \r\n      useEffect(() => {\r\n        const multi = count > 0.9*countMax ? 20 * (count - 0.9*countMax) : 10;\r\n        if(count < countMax){\r\n            setTimeout(() => { renderNext();}, multi * count);\r\n            \r\n        }\r\n        else if (count >= countMax && count > 0) {\r\n          disparaAlarme();\r\n        }\r\n      }, [countMax, escolhido]);\r\n      \r\n\r\n      if(jogadores.length === 0) {\r\n        return(\r\n          <div className=\"roleta-wrapper\">\r\n          <div className={`moldura ${roletaDoBem ? 'moldura-dobem' : 'moldura-domal'}`} style={{ borderColor: corMoldura }}/>\r\n          <div className=\"fundo\"/>\r\n            <div className=\"roleta\">\r\n              <div className=\"jogador-wrapper jogador-anterior jogador-unkown\"/>\r\n              <div className=\"jogador-wrapper jogador-atual jogador-unkown\"/>\r\n              <div className=\"jogador-wrapper jogador-posterior jogador-unkown\"/>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n    \r\n\r\n    if(jogadores.length === 1) {\r\n      anterior = 0;\r\n      posterior = 0;\r\n    }\r\n\r\n    return (\r\n    <div className=\"roleta-wrapper\">    \r\n     <div className={`moldura ${roletaDoBem ? 'moldura-dobem' : 'moldura-domal'}`} style={{ borderColor: corMoldura }}/>\r\n        <div className=\"fundo\"/>\r\n        <div className=\"roleta\">\r\n            <div className={`jogador-wrapper jogador-anterior jogador-${jogadores[anterior]}`} />\r\n            <div className={`jogador-wrapper jogador-atual jogador-${jogadores[atual]}`} />\r\n            <div className={`jogador-wrapper jogador-posterior jogador-${jogadores[posterior]}`} />\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Roleta;","import React from 'react';\r\n\r\nimport './PainelJogador.css';\r\n\r\nconst PainelJogador = ({jogadorId, onClick, selecionado}) => {\r\n\r\n    return (\r\n        <div\r\n            onClick={() => onClick(jogadorId)}\r\n            className={`painel-jogador${(selecionado && '-selecionado') || ''} jogador-${jogadorId}`} />\r\n    )\r\n}\r\n\r\nexport default PainelJogador;","import React, { useEffect, useState } from 'react';\nimport Roleta from './Roleta';\nimport PainelJogador from './PainelJogador';\n\n\nimport siren from './sounds/siren.mp3';\nimport musica from './sounds/musica.mp3';\n\nimport switchUp from './imgs/switchUp.png';\nimport switchDown from './imgs/switchDown.png';\n\nimport { randomInt } from 'mathjs';\nimport './App.css';\nimport './Jogadores.css';\n\nfunction App() {\n\n  const [count, setCount] = useState(0); \n  const [countMax, setCountMax] = useState(0); \n\n  const [selecionados, setSelecionados] = useState([]); \n\n  const [alarmeOn, setAlarmeOn] = useState(0);\n\n  const [corMoldura, setCorMoldura] = useState('#9b9fa1');\n\n  const [roletaDoBem, setRoletaDoBem] = useState(false);\n  \n  const sirene = new Audio(siren);\n  const audio = new Audio(musica);\n\n  useEffect(() => {\n    if(alarmeOn > 0) {\n      setTimeout(() => { setAlarmeOn(alarmeOn - 1)}, 700);\n    }\n  }, [alarmeOn])\n  \n  sirene.load();\n  audio.load();\n\n  const jogadores = [\n    'alessandro',\n    'alexandre',\n    'arthur',\n    'bonke',\n    'carol',\n    'coletto',\n    'diogo',\n    'edu',\n    'fabricio',\n    'guilherme',\n    'guto',\n    'igor',\n    'liandra',\n    'mariana',\n    'romao',\n    'yago',\n  ];\n  \n  const startRoleta = () => {\n    audio.play();\n    setCorMoldura('#9b9fa1');\n    const randonChoice = randomInt(0, jogadores.length);\n    const newCountMax = 50 - jogadores.length + randonChoice;\n    setCount(0);\n    setCountMax(newCountMax);\n  }\n\n  const selecionaJogador = (idJogador) => {\n    if(selecionados.includes(idJogador)) setSelecionados(selecionados.filter(v => v!== idJogador));\n    else setSelecionados([...selecionados, idJogador].sort())\n  }\n\n  const handleFimRoleta = () => {    \n    audio.pause();\n    setCorMoldura(roletaDoBem ? '#00FF00' : '#F80000');\n    sirene.play();\n    setAlarmeOn(24);\n  }\n\n  const handleClickSwitch = () => {\n    setRoletaDoBem(!roletaDoBem);\n  }\n\n  return (\n    <div className={`App ${alarmeOn % 2 === 1 && 'alarme-ligado'} ${roletaDoBem ? 'alarme-dobem' : 'alarme-domal'}`}>\n      <div className=\"content-wrapper\">\n      <div className=\"left-wrapper\">\n        <div className=\"janela-wrapper\" >      \n          <figure class=\"astronauta\"><span class=\"shadow\"></span></figure>\n        </div>\n        <div className=\"switch-wrapper\" >      \n          <div className=\"switch\" onClick={handleClickSwitch} style={{transform: `rotate(${roletaDoBem ? '180deg' : '0deg'})`}} />\n          <div className=\"switch-luz\" style={{ backgroundColor: roletaDoBem ? 'green' : 'red'}} />\n        </div>\n      </div>\n      <Roleta\n        count={count}\n        updateCount={(newCount) => setCount(newCount)}\n        countMax={countMax} jogadores={jogadores.filter(j => selecionados.includes(j))}\n        disparaAlarme={handleFimRoleta}\n        corMoldura={corMoldura}\n        roletaDoBem={roletaDoBem}\n      />\n      <div className=\"painel-jogadores\" >\n      <div className=\"painel-jogadores-imagens\" >\n        {jogadores.map(j => {\n          return (\n            <PainelJogador\n              jogadorId={j}\n              onClick={selecionaJogador}\n              selecionado={selecionados.includes(j)}  \n            />\n          )\n        })}\n        </div>\n      <div className=\"painel-botao\" onClick={startRoleta}>RODAR</div>\n      </div>\n      \n      </div>\n      <figure class=\"bola\"><span class=\"shadow\"></span></figure>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}